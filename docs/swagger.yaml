basePath: /
definitions:
  models.Song:
    properties:
      group:
        type: string
      link:
        type: string
      release_date:
        type: string
      song:
        type: string
      text:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: Приложение для онлайн-библиотеки музыки на RestAPI
  title: Music Library API
  version: "1.0"
paths:
  /songs:
    get:
      consumes:
      - application/json
      description: Получение песен с фильтрацией по всем полям и пагинацией
      parameters:
      - description: Группа
        in: query
        name: group
        type: string
      - description: Песня
        in: query
        name: song
        type: string
      - description: Дата релиза
        in: query
        name: release_date
        type: string
      - description: Часть текста песни
        in: query
        name: text
        type: string
      - description: Ссылка
        in: query
        name: link
        type: string
      - description: Номер страницы
        in: query
        name: page
        type: integer
      - description: Количество записей на странице
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Получение песен
      tags:
      - Songs
    post:
      consumes:
      - application/json
      parameters:
      - description: Песня (group + song)
        in: body
        name: song
        required: true
        schema:
          $ref: '#/definitions/models.Song'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Song'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "502":
          description: Bad Gateway
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Добавление песни
      tags:
      - Songs
  /songs/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: ID песни
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Удаление песни
      tags:
      - Songs
    get:
      consumes:
      - application/json
      parameters:
      - description: ID песни
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Song'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Получение песни по ID
      tags:
      - Songs
    put:
      consumes:
      - application/json
      parameters:
      - description: ID песни
        in: path
        name: id
        required: true
        type: integer
      - description: Обновлённые данные
        in: body
        name: song
        required: true
        schema:
          $ref: '#/definitions/models.Song'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Song'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Обновление песни
      tags:
      - Songs
  /songs/{id}/lyrics:
    get:
      consumes:
      - application/json
      parameters:
      - description: ID песни
        in: path
        name: id
        required: true
        type: integer
      - description: Номер страницы (куплет)
        in: query
        name: page
        type: integer
      - description: Количество куплетов
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Получение текста песни с пагинацией
      tags:
      - Songs
swagger: "2.0"
